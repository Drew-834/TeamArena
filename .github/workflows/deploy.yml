name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
        
    - name: Publish .NET Project
      run: dotnet publish GameScoreboard.csproj -c Release -o release --nologo
    
    - name: List release directory
      run: ls -la release
      
    - name: Prepare deployment directory
      run: |
        # Create deployment directory
        mkdir -p release/deploy
        
        # Copy the original wwwroot directory contents
        echo "Copying wwwroot files..."
        cp -r wwwroot/* release/deploy/
        
        # Find and copy the _framework directory from the published output
        FRAMEWORK_PATH=$(find release -type d -name "_framework" | head -n 1)
        if [ -z "$FRAMEWORK_PATH" ]; then
          echo "_framework directory not found!"
          exit 1
        fi
        echo "Found _framework at $FRAMEWORK_PATH"
        cp -r $FRAMEWORK_PATH release/deploy/
        
        # Find and copy the published index.html file
        INDEX_HTML=$(find release -name "index.html" | head -n 1)
        if [ -z "$INDEX_HTML" ]; then
          echo "index.html not found!"
          exit 1
        fi
        echo "Found index.html at $INDEX_HTML"
        cp $INDEX_HTML release/deploy/
        
        # Copy any other published content directories if they exist
        for dir in css js images; do
          if [ -d "release/wwwroot/$dir" ]; then
            echo "Copying published $dir directory..."
            cp -r release/wwwroot/$dir release/deploy/
          fi
        done
        
        # List the original wwwroot directory
        echo "Original wwwroot contents:"
        ls -la wwwroot
        
        # List the final deployment directory
        echo "Final deployment directory contents:"
        ls -la release/deploy
        
        # Check for specific files
        echo "Checking for specific files in deployment directory:"
        find release/deploy -name "app.js" || echo "app.js not found"
        find release/deploy -name "app.css" || echo "app.css not found"
        find release/deploy -name "*.png" | head -n 5 || echo "No PNG files found"
    
    # Update the base href in index.html
    - name: Update base href
      run: |
        sed -i 's|<base href=.*/>|<base href="/TeamArena/" />|' release/deploy/index.html
        grep "<base" release/deploy/index.html
        
    # Copy index.html to 404.html for SPA routing
    - name: Copy index.html to 404.html
      run: cp release/deploy/index.html release/deploy/404.html
      
    # Add .nojekyll file to tell GitHub pages not to use Jekyll processing
    - name: Add .nojekyll file
      run: touch release/deploy/.nojekyll
      
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: release/deploy 